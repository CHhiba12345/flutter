import '../entities/app_user.dart';

// ============================================================================
// üìå INTERFACE : AuthRepository
// ----------------------------------------------------------------------------
// D√©finit les op√©rations que le domaine peut effectuer sur l'authentification.
// Cette abstraction est utilis√©e par les cas d'utilisation (use cases) du domaine,
// ind√©pendamment de l'impl√©mentation technique (Firebase, API, etc.).
// ============================================================================

abstract class AuthRepository {
  // ===========================================================================
  // üîê AUTHENTIFICATION EMAIL / MOT DE PASSE
  // ===========================================================================

  /// Connecte un utilisateur avec son email et mot de passe.
  Future<AppUser> signInWithEmailAndPassword(String email, String password);

  /// Inscrit un nouvel utilisateur avec email, mot de passe et nom.
  Future<AppUser> signUpWithEmailAndPassword(
      String email,
      String password,
      String firstName,
      String lastName);

  // ===========================================================================
  // üü° GOOGLE SIGN-IN
  // ===========================================================================

  /// Connexion via Google.
  Future<AppUser?> signInWithGoogle();

  // ===========================================================================
  // üîµ FACEBOOK SIGN-IN
  // ===========================================================================

  /// Connexion via Facebook.
  Future<AppUser?> signInWithFacebook();

  // ===========================================================================
  // üîö D√âCONNEXION
  // ===========================================================================

  /// D√©connecte l'utilisateur.
  Future<void> signOut();

  // ===========================================================================
  // üîê GESTION DES TOKENS
  // ===========================================================================

  /// R√©cup√®re le token Firebase actuel de l'utilisateur.
  Future<String?> getFirebaseToken();

  /// R√©cup√®re l'identifiant utilisateur √† partir du token stock√©.
  Future<String?> getUserId();

  // ===========================================================================
  // üìß R√âINITIALISATION DU MOT DE PASSE
  // ===========================================================================

  /// Envoie un email de r√©initialisation du mot de passe.
  Future<void> sendPasswordResetEmail(String email);

  /// Confirme la r√©initialisation du mot de passe avec un code et un nouveau mot de passe.
  Future<void> confirmPasswordReset(String oobCode, String newPassword);
}